name: Build Matrix
on:
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    name: Build App on ${{ matrix.os }}${{ matrix.arch && format(' ({0})', matrix.arch) || '' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
          - os: windows-latest
            arch: x64
          - os: macos-13
            arch: x64
          - os: macos-latest
            arch: arm64
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Setup macOS code signing
        uses: ./.github/actions/setup-macos-codesign
        if: runner.os == 'macOS'
        with:
          apple-certificate: ${{ secrets.APPLE_CERTIFICATE }}
          apple-certificate-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
          apple-api-key: ${{ secrets.APPLE_API_KEY }}

          apple-issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
          apple-key-id: ${{ secrets.APPLE_KEY_ID }}

      - name: Setup Windows code signing
        uses: ./.github/actions/setup-windows-codesign
        if: runner.os == 'Windows'
        with:
          sm-host: ${{ secrets.SM_HOST }}
          sm-api-key: ${{ secrets.SM_API_KEY }}
          sm-client-cert-file-b64: ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}
          sm-client-cert-password: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
          sm-code-signing-cert-sha1-hash: ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }}

      - name: Install Flatpak tool-chain (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          # flatpak itself isn't strictly required to *build*, but it's good to have.
          sudo apt-get install -y --no-install-recommends \
               flatpak flatpak-builder elfutils
          flatpak remote-add --if-not-exists --user flathub https://dl.flathub.org/repo/flathub.flatpakrepo

      - name: Build App
        run: pnpm run make -- --arch=${{ matrix.arch }}
        env:
          npm_config_target_platform: ${{ runner.os == 'Linux' && 'linux' || (runner.os == 'macOS' && 'darwin' || 'win32') }}
          # Apple API Key method for notarization (set by composite action)
          APPLE_API_KEY: ${{ env.APPLE_API_KEY_PATH }}
          APPLE_ISSUER_ID: ${{ env.APPLE_ISSUER_ID }}
          APPLE_KEY_ID: ${{ env.APPLE_KEY_ID }}
